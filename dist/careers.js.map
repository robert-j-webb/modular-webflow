{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/careers.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Career Listing\n// if location host is modular-dev.webflow.io, add class .webflow-page-type-career-post to body\nif (window.location.host === 'modular-dev.webflow.io') {\n  var greenhouse = 'modtestingsite';\n} else {\n  greenhouse = 'modularai';\n}\n\nvar hostName = window.location.hostname;\n\n// get jobs for department with id 4001072005\nfunction getJobsForDepartment(jobPositions, departmentId) {\n  let jobsForDepartment = [];\n  for (let i = 0; i < jobPositions.departments.length; i++) {\n    if (jobPositions.departments[i].id === departmentId) {\n      jobsForDepartment = jobPositions.departments[i].jobs;\n    }\n  }\n  return jobsForDepartment;\n}\n\n// for each job in jobsForDepartment append a job to the element with class .greenhouse-tabs-content\nfunction appendJobsForDepartment(jobsForDepartment) {\n  document.querySelector('.roles-list_item').innerHTML = '';\n  for (let i = 0; i < jobsForDepartment.length; i++) {\n    let job = jobsForDepartment[i];\n    let jobTitle = job.title;\n    let jobId = job.id;\n    let jobLocation = job.location.name;\n    let jobListItem = document.createElement('a');\n    jobListItem.classList.add('roles-list_link');\n    jobListItem.setAttribute(\n      'href',\n      `https://${hostName}/company/career-post?${jobId}&gh_jid=${jobId}`\n    );\n    jobListItem.setAttribute('data-job-id', jobId);\n    jobListItem.innerHTML = `<div><div class=\"margin-bottom margin-4\"><p class=\"text-size-small-2 text-weight-medium text-style-tthoves\">${jobTitle}</p></div><div class=\"text-color-twilight60-3\"><p class=\"text-size-xsmall-7\">${jobLocation}</p></div></div> <div class=\"text-color-twilight60-3\"><div><p class=\"text-size-xsmall-7\">Apply now</p></div></div>`;\n\n    document.querySelector('.roles-list_item').appendChild(jobListItem);\n  }\n}\n\nif (document.querySelector('.roles_wrap')) {\n  async function fetchData() {\n    const jobsResponse = await fetch(\n      `https://boards-api.greenhouse.io/v1/boards/${greenhouse}/jobs`\n    );\n    const jobsData = await jobsResponse.json();\n\n    function appendAllJobs(jobs) {\n      const tabsMenu = document.querySelector('.roles_wrap .roles-filters');\n      tabsMenu.innerHTML = '';\n\n      const departmentListItem = document.createElement('a');\n      departmentListItem.classList.add('tabs-item-2');\n      departmentListItem.href = '#';\n      departmentListItem.innerHTML = `\n            <div>All</div>\n            <div>(${jobs.length})</div>`;\n\n      $(departmentListItem).on('click', function (e) {\n        $('.cc-current').removeClass('cc-current');\n        $(this).addClass('cc-current');\n\n        appendJobsForDepartment(jobs);\n      });\n\n      tabsMenu.appendChild(departmentListItem);\n    }\n    appendAllJobs(jobsData.jobs);\n\n    const departmentsResponse = await fetch(\n      `https://boards-api.greenhouse.io/v1/boards/${greenhouse}/departments`\n    );\n    const departmentsData = await departmentsResponse.json();\n\n    var jobPositions = departmentsData;\n\n    function findDepartmentsWithJobs(jobPositions) {\n      let departmentsWithJobs = [];\n\n      for (let i = 0; i < jobPositions.departments.length; i++) {\n        if (jobPositions.departments[i].jobs.length > 0) {\n          departmentsWithJobs.push(jobPositions.departments[i]);\n        }\n      }\n\n      return departmentsWithJobs;\n    }\n\n    var departmentsWithJobs = findDepartmentsWithJobs(jobPositions);\n\n    function appendDepartmentsWithJobs(departmentsWithJobs) {\n      const tabsMenu = document.querySelector('.roles_wrap .roles-filters');\n\n      departmentsWithJobs.forEach((department) => {\n        const { id: departmentId, name: departmentName, jobs } = department;\n        const departmentListItem = document.createElement('a');\n\n        departmentListItem.classList.add('tabs-item-2');\n        departmentListItem.dataset.departmentId = departmentId;\n        departmentListItem.href = '#';\n        departmentListItem.innerHTML = `\n                    <div\">${departmentName}</div>\n                    <div\">(${jobs.length})</div>\n                `;\n\n        departmentListItem.addEventListener('click', (e) => {\n          const currentTab = document.querySelector('.cc-current');\n          if (currentTab) currentTab.classList.remove('cc-current');\n\n          const targetLink = e.currentTarget.closest('a') || e.currentTarget.querySelector('a');\n          if (targetLink) targetLink.classList.add('cc-current');\n\n          const jobsForDepartment = getJobsForDepartment(jobPositions, departmentId);\n          appendJobsForDepartment(jobsForDepartment);\n        });\n\n        tabsMenu.appendChild(departmentListItem);\n      });\n    }\n\n    appendDepartmentsWithJobs(departmentsWithJobs);\n\n    document.querySelector('.roles-filters').firstElementChild.click();\n  }\n\n  fetchData();\n}\n\n// Career Detail\nif (window.location.pathname === '/company/career-post') {\n  if (window.location.host === 'modular-dev.webflow.io') {\n    var greenhouse = 'modtestingsite';\n  } else {\n    greenhouse = 'modularai';\n  }\n\n  var greenhouseSrc = `https://boards.greenhouse.io/embed/job_board/js?for=${greenhouse}`;\n  var greenhouseScript = document.createElement('script');\n  greenhouseScript.src = greenhouseSrc;\n  document.body.appendChild(greenhouseScript);\n\n  var jobId = window.location.search.split('=')[1];\n  fetch(`https://boards-api.greenhouse.io/v1/boards/${greenhouse}/jobs/${jobId}`)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.status === 404) {\n        window.location.href = '/company/careers';\n        return;\n      }\n      let job = data;\n      let jobTitle = job.title;\n      let jobLocation = job.location.name;\n      document.getElementById('job-title').innerHTML = jobTitle;\n      document.getElementById('job-location').innerHTML = jobLocation;\n      document.getElementById('job-breadcrumb').innerHTML = jobTitle;\n    });\n\n  function getRandomNumber() {\n    return Math.floor(Math.random() * 7) + 1;\n  }\n\n  var randomImage = getRandomNumber(7);\n\n  // array of 7 items\n  let images = [\n    'https://uploads-ssl.webflow.com/63f9f100025c058594957cca/664e0a4c3fb8390c982f26ed_careers_1.jpg',\n    'https://uploads-ssl.webflow.com/63f9f100025c058594957cca/664e0a4c2a0972c00c89b518_careers_2.jpg',\n    'https://uploads-ssl.webflow.com/63f9f100025c058594957cca/664e0a4d866f802f73558a82_careers_3.jpg',\n    'https://uploads-ssl.webflow.com/63f9f100025c058594957cca/664e0a4d68cb5b9855976a3e_careers_4.jpg',\n    'https://uploads-ssl.webflow.com/63f9f100025c058594957cca/664e0a4cef8736f278b329bd_careers_5.jpg',\n    'https://uploads-ssl.webflow.com/63f9f100025c058594957cca/664e0a4d99662e786edecf7a_careers_6.jpg',\n    'https://uploads-ssl.webflow.com/63f9f100025c058594957cca/664e0a4c58f7db9766875803_careers_7.jpg',\n  ];\n\n  document.getElementById('job-image').src = images[randomImage - 1];\n}\n\n// Swiper\nconst swiper = new Swiper('.careers-testimonial_list', {\n  // Optional parameters\n  slidesPerView: 'auto',\n  spaceBetween: 20,\n  // Navigation arrows\n  navigation: {\n    nextEl: '.swiper-arrow.next',\n    prevEl: '.swiper-arrow.prev',\n  },\n});\n"],
  "mappings": "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",
  "names": ["jobPositions", "departmentsWithJobs", "getRandomNumber"]
}
